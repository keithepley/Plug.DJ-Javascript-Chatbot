// Generated by CoffeeScript 1.4.0
var voteRatioCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

voteRatioCommand = (function(_super) {

  __extends(voteRatioCommand, _super);

  function voteRatioCommand() {
    return voteRatioCommand.__super__.constructor.apply(this, arguments);
  }

  voteRatioCommand.prototype.init = function() {
    this.command = '.voteratio';
    this.parseType = 'startsWith';
    return this.rankPrivelege = 'mod';
  };

  voteRatioCommand.prototype.functionality = function() {
    var msg, name, r, u, votes;
    r = new RoomHelper();
    msg = this.msgData.message;
    if (msg.length > 12) {
      name = msg.substr(12);
      u = r.lookupUser(name);
      if (u !== false) {
        votes = r.userVoteRatio(u);
        msg = u.username + " has wooted " + votes['woot'].toString() + " time";
        if (votes['woot'] === 1) {
          msg += ', ';
        } else {
          msg += 's, ';
        }
        msg += "and meh'd " + votes['meh'].toString() + " time";
        if (votes['meh'] === 1) {
          msg += '. ';
        } else {
          msg += 's. ';
        }
        msg += "Their woot:vote ratio is " + votes['positiveRatio'].toString() + ".";
        return API.sendChat(msg);
      } else {
        return API.sendChat("I don't recognize a user named '" + name + "'");
      }
    } else {
      return API.sendChat("I'm not sure what you want from me...");
    }
  };

  return voteRatioCommand;

})(Command);
