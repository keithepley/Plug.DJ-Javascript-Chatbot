// Generated by CoffeeScript 1.4.0
var commandsCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

commandsCommand = (function(_super) {

  __extends(commandsCommand, _super);

  function commandsCommand() {
    return commandsCommand.__super__.constructor.apply(this, arguments);
  }

  commandsCommand.prototype.init = function() {
    this.command = ['.commands', '.help'];
    this.parseType = 'exact';
    return this.rankPrivelege = 'user';
  };

  commandsCommand.prototype.functionality = function() {
    var allowedUserLevels, c, cc, cmd, msg, user, _i, _j, _len, _len1, _ref, _ref1;
    allowedUserLevels = [];
    user = API.getUser(this.msgData.fromID);
    window.capturedUser = user;
    if (user.permission > 5) {
      allowedUserLevels = ['user', 'mod', 'host'];
    } else if (user.permission > 2) {
      allowedUserLevels = ['user', 'mod'];
    } else {
      allowedUserLevels = ['user'];
    }
    msg = '';
    for (_i = 0, _len = cmds.length; _i < _len; _i++) {
      cmd = cmds[_i];
      c = new cmd('');
      if (_ref = c.rankPrivelege, __indexOf.call(allowedUserLevels, _ref) >= 0) {
        if (typeof c.command === "string") {
          msg += c.command + ', ';
        } else if (typeof c.command === "object") {
          _ref1 = c.command;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            cc = _ref1[_j];
            msg += cc + ', ';
          }
        }
      }
    }
    msg = msg.substring(0, msg.length - 2);
    return API.sendChat(msg);
  };

  return commandsCommand;

})(Command);
